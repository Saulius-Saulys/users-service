// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/gin-gonic/gin"
	"github.com/telia-company/convhub-lmm-communication-service/internal/config"
	"github.com/telia-company/convhub-lmm-communication-service/internal/logger"
	"github.com/telia-company/convhub-lmm-communication-service/internal/network/http"
)

// Injectors from wire.go:

func inject(ctx context.Context) (userService, error) {
	engine := gin.New()
	zapLogger := logger.NewSeparatedLogger()
	configConfig, err := config.NewConfig(zapLogger)
	if err != nil {
		return userService{}, err
	}
	router := http.NewRouter(engine, zapLogger, configConfig)
	server := http.NewHTTPServer(router, configConfig, zapLogger)
	mainUserService := newUserService(server, zapLogger)
	return mainUserService, nil
}
